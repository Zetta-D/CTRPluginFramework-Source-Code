/* This file has been generated by the Hex-Rays decompiler.
   Copyright (c) 2007-2017 Hex-Rays <info@hex-rays.com>

   Detected compiler: GNU C++
*/

#include <defs.h>


//-------------------------------------------------------------------------
// Function declarations

int Kernel::GetCurrentCoreId(void)::{lambda(void)#1}::_FUN();
int __fastcall KThread::GetTls(void)::{lambda(KThread*)#1}::_FUN(unsigned __int8 *a1);
int __fastcall KThread::GetOwner(void)::{lambda(KThread*)#1}::_FUN(unsigned __int8 *a1);
int KProcess::GetCurrent(void)::{lambda(void)#1}::_FUN();
int __fastcall KProcess::PatchMaxPriority(unsigned long)::{lambda(KProcess*,unsigned long,unsigned long)#1}::_FUN(int a1, int a2, int a3);
int __fastcall ZZN11KAutoObject7GetNameB5cxx11EvENUlPS_PcE_4_FUNES0_S1_(unsigned __int8 *a1, int a2);
int __fastcall KAutoObject::GetType(void)::{lambda(KAutoObject*)#1}::_FUN(unsigned __int8 *a1, int a2, int a3);
int __fastcall KProcess::PatchCore2Access(void)::{lambda(KProcess*)#1}::_FUN(int result);
int __fastcall KProcess::PatchCategory(unsigned long)::{lambda(KProcess*,unsigned long,unsigned long)#1}::_FUN(int a1, int a2, int a3);
int __fastcall KProcess::GetObjFromHandle(unsigned long)::{lambda(KProcess*,unsigned long)#1}::_FUN(int a1, int a2);
int __fastcall ZZN8KProcess7GetNameB5cxx11EvENUlPS_PcE_4_FUNES0_S1_(int a1, int a2);
void *__fastcall Kernel::Memcpy(void *,void const*,unsigned long)::{lambda(void *,void *,unsigned long)#1}::_FUN(void *a1, const void *a2, size_t a3);
int __fastcall Kernel::Memcpy(Kernel *this, void *a2, const void *a3, unsigned int a4);
int __fastcall Kernel::GetCurrentCoreId(Kernel *this, int a2, int a3, int a4);
int __fastcall KAutoObject::GetType(KAutoObject *this, int a2, int a3);
int __fastcall KThread::GetTls(KThread *this, int a2, int a3, int a4);
bool __fastcall KThread::IsPluginThread(KThread *this, int a2, int a3, int a4);
int __fastcall KThread::GetOwner(KThread *this, int a2, int a3, int a4);
int __fastcall KProcess::GetCurrent(KProcess *this, int a2, int a3, int a4);
int __fastcall KProcess::PatchCore2Access(int result, int a2, int a3);
int __fastcall KProcess::PatchCategory(KProcess *this, unsigned int a2);
int __fastcall KProcess__PatchCategory(unsigned int); // idb
int __fastcall KProcess::PatchMaxPriority(KProcess *this, unsigned int a2);
int __fastcall KProcess__PatchMaxPriority(unsigned int); // idb
int __fastcall KProcess::GetObjFromHandle(KProcess *this, unsigned int a2);
int __fastcall std::__cxx11::basic_string<char,std::char_traits<char>,std::allocator<char>>::_M_construct<char const*>(int *a1, int a2, int a3);
int *__fastcall ZN8KProcess7GetNameB5cxx11Ev(int *a1, int a2, int a3, int a4);
int *__fastcall ZN11KAutoObject7GetNameB5cxx11Ev(int *a1, int a2, int a3, int a4);
// void *memcpy(void *dest, const void *src, size_t n);
// int __fastcall svcCustomBackdoor(_DWORD, _DWORD, _DWORD, _DWORD); weak
// void __cdecl __noreturn std::__throw_logic_error(const char *); idb
// int __cdecl std::__cxx11::basic_string<char,std::char_traits<char>,std::allocator<char>>::_M_create(_DWORD); weak
// int __fastcall std::__cxx11::basic_string<char,std::char_traits<char>,std::allocator<char>>::_S_copy_chars(_DWORD, _DWORD, _DWORD); weak
// size_t strlen(const char *s);

//-------------------------------------------------------------------------
// Data declarations

_UNKNOWN loc_18;

u32 Kernel::GetCurrentCoreId(void)
{
  return __mrc(15, 0, 0, 0, 5) & 3;
}

u32 KThread::GetTls(u8 *tls)
{
  return tls[148] | (tls[149] << 8) | (tls[150] << 16) | (tls[151] << 24);
}

u32 KThread::GetOwner(u8 *owner)
{
  return owner[128] | (owner[129] << 8) | (owner[130] << 16) | (owner[131] << 24);
}

u32 KProcess::GetCurrent(void)
{
  return MEMORY[0xFFFF9004];
}

int __fastcall KProcess::PatchMaxPriority(unsigned long)::{lambda(KProcess*,unsigned long,unsigned long)#1}::_FUN(int a1, int a2, int a3)
{
  unsigned __int8 *v3; // r3
  int v4; // r0
  int v5; // r2
  int v6; // r2
  int v7; // r0

  v3 = *(u8**)(a1 + a3);
  v4 = v3[9];
  v5 = v3[8];
  v3[9] = BYTE1(a2);
  v6 = v5 | (v4 << 8) | (v3[10] << 16);
  v7 = v3[11];
  v3[8] = a2;
  v3[10] = BYTE2(a2);
  v3[11] = HIBYTE(a2);
  return v6 | (v7 << 24);
}

//----- (0000009C) --------------------------------------------------------
int __fastcall ZZN11KAutoObject7GetNameB5cxx11EvENUlPS_PcE_4_FUNES0_S1_(unsigned __int8 *a1, int a2)
{
  int v2; // r4
  int v3; // r1
  int v4; // r2
  int v5; // r3
  int result; // r0
  int v7; // t1
  unsigned __int8 *v8; // [sp+0h] [bp-10h]
  int v9; // [sp+4h] [bp-Ch]

  v8 = a1;
  v9 = a2;
  v2 = a2;
  (*(void (__fastcall **)(unsigned __int8 **, unsigned __int8 *))((char *)&loc_18
                                                                + (*a1 | (a1[1] << 8) | (a1[2] << 16) | (a1[3] << 24))))(
    &v8,
    a1);
  v3 = v2 - 1;
  v4 = (int)(v8 - 1);
  v5 = (int)(v8 + 7);
  do
  {
    v7 = *(unsigned __int8 *)(v4++ + 1);
    result = v7;
    *(_BYTE *)(v3++ + 1) = v7;
  }
  while ( v4 != v5 );
  return result;
}

//----- (000000F8) --------------------------------------------------------
int __fastcall KAutoObject::GetType(void)::{lambda(KAutoObject*)#1}::_FUN(unsigned __int8 *a1, int a2, int a3)
{
  unsigned __int8 *v4; // [sp+0h] [bp-10h]
  int v5; // [sp+4h] [bp-Ch]
  int v6; // [sp+8h] [bp-8h]

  v4 = a1;
  v5 = a2;
  v6 = a3;
  (*(void (__fastcall **)(unsigned __int8 **, unsigned __int8 *))((char *)&loc_18
                                                                + (*a1 | (a1[1] << 8) | (a1[2] << 16) | (a1[3] << 24))))(
    &v4,
    a1);
  return (unsigned __int8)v5;
}

//----- (00000134) --------------------------------------------------------
int __fastcall KProcess::PatchCore2Access(void)::{lambda(KProcess*)#1}::_FUN(int result)
{
  *(_DWORD *)(result + 176) |= 0x2000u;
  return result;
}

//----- (00000144) --------------------------------------------------------
int __fastcall KProcess::PatchCategory(unsigned long)::{lambda(KProcess*,unsigned long,unsigned long)#1}::_FUN(int a1, int a2, int a3)
{
  int v3; // r12

  v3 = *(_DWORD *)(a1 + a3);
  *(_DWORD *)(a1 + a3) = v3 & 0xFFFFF0FF | a2;
  return v3 & 0xF00;
}

//----- (0000015C) --------------------------------------------------------
int __fastcall KProcess::GetObjFromHandle(unsigned long)::{lambda(KProcess*,unsigned long)#1}::_FUN(int a1, int a2)
{
  signed int v2; // r3
  unsigned __int8 *v3; // r1

  a2 = (unsigned __int16)a2;
  if ( CTRPluginFramework::SystemImpl::IsNew3DS )
    v2 = 220;
  else
    v2 = 212;
  v3 = (unsigned __int8 *)((*(unsigned __int8 *)(a1 + v2) | (*(unsigned __int8 *)(a1 + v2 + 1) << 8) | (*(unsigned __int8 *)(a1 + v2 + 2) << 16) | (*(unsigned __int8 *)(a1 + v2 + 3) << 24))
                         + 8 * a2);
  return v3[4] | (v3[5] << 8) | (v3[6] << 16) | (v3[7] << 24);
}

//----- (000001B8) --------------------------------------------------------
int __fastcall ZZN8KProcess7GetNameB5cxx11EvENUlPS_PcE_4_FUNES0_S1_(int a1, int a2)
{
  int v2; // r1
  signed int v3; // r3
  int v4; // r0
  char *v5; // r3
  int result; // r0
  char v7; // t1

  v2 = a2 - 1;
  if ( CTRPluginFramework::SystemImpl::IsNew3DS )
    v3 = 184;
  else
    v3 = 208;
  v4 = a1 + v3;
  v5 = (char *)(v4 + 80);
  result = v4 + 88;
  do
  {
    v7 = *v5++;
    *(_BYTE *)(v2++ + 1) = v7;
  }
  while ( v5 != (char *)result );
  return result;
}

//----- (000001F4) --------------------------------------------------------
void *__fastcall Kernel::Memcpy(void *,void const*,unsigned long)::{lambda(void *,void *,unsigned long)#1}::_FUN(void *a1, const void *a2, size_t a3)
{
  void *result; // r0

  __asm { CPSID   AIF }
  result = memcpy(a1, a2, a3);
  __asm { CPSIE   AIF }
  return result;
}

//----- (0000020C) --------------------------------------------------------
int __fastcall Kernel::Memcpy(Kernel *this, void *a2, const void *a3, unsigned int a4)
{
  return svcCustomBackdoor(
           Kernel::Memcpy(void *,void const*,unsigned long)::{lambda(void *,void *,unsigned long)#1}::_FUN,
           this,
           a2,
           a3);
}
// 4C8: using guessed type int __fastcall svcCustomBackdoor(_DWORD, _DWORD, _DWORD, _DWORD);

//----- (00000224) --------------------------------------------------------
int __fastcall Kernel::GetCurrentCoreId(Kernel *this, int a2, int a3, int a4)
{
  return svcCustomBackdoor(Kernel::GetCurrentCoreId(void)::{lambda(void)#1}::_FUN, a2, a3, a4);
}
// 4C8: using guessed type int __fastcall svcCustomBackdoor(_DWORD, _DWORD, _DWORD, _DWORD);

//----- (00000230) --------------------------------------------------------
int __fastcall KAutoObject::GetType(KAutoObject *this, int a2, int a3)
{
  return svcCustomBackdoor(KAutoObject::GetType(void)::{lambda(KAutoObject*)#1}::_FUN, this, a3, __get_CPSR());
}
// 4C8: using guessed type int __fastcall svcCustomBackdoor(_DWORD, _DWORD, _DWORD, _DWORD);

//----- (00000244) --------------------------------------------------------
int __fastcall KThread::GetTls(KThread *this, int a2, int a3, int a4)
{
  return svcCustomBackdoor(KThread::GetTls(void)::{lambda(KThread*)#1}::_FUN, this, a3, a4);
}
// 4C8: using guessed type int __fastcall svcCustomBackdoor(_DWORD, _DWORD, _DWORD, _DWORD);

//----- (00000254) --------------------------------------------------------
bool __fastcall KThread::IsPluginThread(KThread *this, int a2, int a3, int a4)
{
  return *(_DWORD *)KThread::GetTls(this, a2, a3, a4) == 559175204;
}

//----- (00000278) --------------------------------------------------------
int __fastcall KThread::GetOwner(KThread *this, int a2, int a3, int a4)
{
  return svcCustomBackdoor(KThread::GetOwner(void)::{lambda(KThread*)#1}::_FUN, this, a3, a4);
}
// 4C8: using guessed type int __fastcall svcCustomBackdoor(_DWORD, _DWORD, _DWORD, _DWORD);

//----- (00000288) --------------------------------------------------------
int __fastcall KProcess::GetCurrent(KProcess *this, int a2, int a3, int a4)
{
  return svcCustomBackdoor(KProcess::GetCurrent(void)::{lambda(void)#1}::_FUN, a2, a3, a4);
}
// 4C8: using guessed type int __fastcall svcCustomBackdoor(_DWORD, _DWORD, _DWORD, _DWORD);

//----- (00000294) --------------------------------------------------------
int __fastcall KProcess::PatchCore2Access(int result, int a2, int a3)
{
  if ( CTRPluginFramework::SystemImpl::IsNew3DS )
    result = svcCustomBackdoor(
               KProcess::PatchCore2Access(void)::{lambda(KProcess*)#1}::_FUN,
               result,
               a3,
               CTRPluginFramework::SystemImpl::IsNew3DS);
  return result;
}
// 4C8: using guessed type int __fastcall svcCustomBackdoor(_DWORD, _DWORD, _DWORD, _DWORD);

//----- (000002B8) --------------------------------------------------------
int __fastcall KProcess::PatchCategory(KProcess *this, unsigned int a2)
{
  signed int v2; // r3

  if ( CTRPluginFramework::SystemImpl::IsNew3DS )
    v2 = 176;
  else
    v2 = 168;
  return svcCustomBackdoor(
           KProcess::PatchCategory(unsigned long)::{lambda(KProcess*,unsigned long,unsigned long)#1}::_FUN,
           this,
           a2,
           v2);
}
// 4C8: using guessed type int __fastcall svcCustomBackdoor(_DWORD, _DWORD, _DWORD, _DWORD);

//----- (000002E4) --------------------------------------------------------
int __fastcall KProcess__PatchCategory(unsigned int a1)
{
  return KProcess::PatchCategory(CTRPluginFramework::ProcessImpl::KProcessPtr, a1);
}

//----- (000002F8) --------------------------------------------------------
int __fastcall KProcess::PatchMaxPriority(KProcess *this, unsigned int a2)
{
  signed int v2; // r3

  if ( CTRPluginFramework::SystemImpl::IsNew3DS )
    v2 = 132;
  else
    v2 = 124;
  return svcCustomBackdoor(
           KProcess::PatchMaxPriority(unsigned long)::{lambda(KProcess*,unsigned long,unsigned long)#1}::_FUN,
           this,
           a2,
           v2);
}
// 4C8: using guessed type int __fastcall svcCustomBackdoor(_DWORD, _DWORD, _DWORD, _DWORD);

//----- (00000324) --------------------------------------------------------
int __fastcall KProcess__PatchMaxPriority(unsigned int a1)
{
  return KProcess::PatchMaxPriority(CTRPluginFramework::ProcessImpl::KProcessPtr, a1);
}

//----- (00000338) --------------------------------------------------------
int __fastcall KProcess::GetObjFromHandle(KProcess *this, unsigned int a2)
{
  return svcCustomBackdoor(
           KProcess::GetObjFromHandle(unsigned long)::{lambda(KProcess*,unsigned long)#1}::_FUN,
           this,
           a2,
           __get_CPSR());
}
// 4C8: using guessed type int __fastcall svcCustomBackdoor(_DWORD, _DWORD, _DWORD, _DWORD);

//----- (00000350) --------------------------------------------------------
int __fastcall std::__cxx11::basic_string<char,std::char_traits<char>,std::allocator<char>>::_M_construct<char const*>(int *a1, int a2, int a3)
{
  int v3; // r6
  _BOOL4 v4; // r2
  int *v5; // r4
  int v6; // r5
  int v7; // r0
  int v8; // r3
  int result; // r0
  int v10; // r3
  int v11; // r2
  int v12; // [sp+4h] [bp-14h]

  v12 = a2;
  v3 = a3;
  v4 = a3 != 0;
  if ( a2 )
    v4 = 0;
  if ( v4 )
    std::__throw_logic_error("basic_string::_M_construct null not valid");
  v5 = a1;
  v6 = a2;
  v12 = v3 - a2;
  if ( (unsigned int)(v3 - a2) > 0xF )
  {
    v7 = std::__cxx11::basic_string<char,std::char_traits<char>,std::allocator<char>>::_M_create(a1);
    v8 = v12;
    *v5 = v7;
    v5[2] = v8;
  }
  result = std::__cxx11::basic_string<char,std::char_traits<char>,std::allocator<char>>::_S_copy_chars(*v5, v6, v3);
  v10 = v12;
  v11 = *v5;
  v5[1] = v12;
  *(_BYTE *)(v11 + v10) = 0;
  return result;
}
// 4D4: using guessed type int __cdecl std::__cxx11::basic_string<char,std::char_traits<char>,std::allocator<char>>::_M_create(_DWORD);
// 4D8: using guessed type int __fastcall std::__cxx11::basic_string<char,std::char_traits<char>,std::allocator<char>>::_S_copy_chars(_DWORD, _DWORD, _DWORD);

//----- (000003D4) --------------------------------------------------------
int *__fastcall ZN8KProcess7GetNameB5cxx11Ev(int *a1, int a2, int a3, int a4)
{
  int *v4; // r4
  size_t v5; // r0
  char s[4]; // [sp+4h] [bp-14h]
  int v8; // [sp+8h] [bp-10h]
  int v9; // [sp+Ch] [bp-Ch]

  v9 = a4;
  v4 = a1;
  *(_DWORD *)s = 0;
  v8 = 0;
  LOBYTE(v9) = 0;
  svcCustomBackdoor(ZZN8KProcess7GetNameB5cxx11EvENUlPS_PcE_4_FUNES0_S1_, a2, s, __get_CPSR());
  *v4 = (int)(v4 + 2);
  v5 = strlen(s);
  std::__cxx11::basic_string<char,std::char_traits<char>,std::allocator<char>>::_M_construct<char const*>(
    v4,
    (int)s,
    (int)&s[v5]);
  return v4;
}
// 4C8: using guessed type int __fastcall svcCustomBackdoor(_DWORD, _DWORD, _DWORD, _DWORD);

//----- (00000434) --------------------------------------------------------
int *__fastcall ZN11KAutoObject7GetNameB5cxx11Ev(int *a1, int a2, int a3, int a4)
{
  int *v4; // r4
  size_t v5; // r0
  char s[4]; // [sp+4h] [bp-14h]
  int v8; // [sp+8h] [bp-10h]
  int v9; // [sp+Ch] [bp-Ch]

  v9 = a4;
  v4 = a1;
  *(_DWORD *)s = 0;
  v8 = 0;
  LOBYTE(v9) = 0;
  svcCustomBackdoor(ZZN11KAutoObject7GetNameB5cxx11EvENUlPS_PcE_4_FUNES0_S1_, a2, s, __get_CPSR());
  *v4 = (int)(v4 + 2);
  v5 = strlen(s);
  std::__cxx11::basic_string<char,std::char_traits<char>,std::allocator<char>>::_M_construct<char const*>(
    v4,
    (int)s,
    (int)&s[v5]);
  return v4;
}
// 4C8: using guessed type int __fastcall svcCustomBackdoor(_DWORD, _DWORD, _DWORD, _DWORD);

// ALL OK, 28 function(s) have been successfully decompiled
