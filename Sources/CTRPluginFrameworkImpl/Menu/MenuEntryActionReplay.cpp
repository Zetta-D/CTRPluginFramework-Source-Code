/* This file has been generated by the Hex-Rays decompiler.
   Copyright (c) 2007-2017 Hex-Rays <info@hex-rays.com>

   Detected compiler: GNU C++
*/

#include <defs.h>


//-------------------------------------------------------------------------
// Function declarations

int __fastcall CTRPluginFramework::ActionReplay_ExecuteCode(int result, CTRPluginFramework::MenuEntryImpl *a2);
CTRPluginFramework::MenuEntryActionReplay *__fastcall CTRPluginFramework::MenuEntryActionReplay::~MenuEntryActionReplay(CTRPluginFramework::MenuEntryActionReplay *this, CTRPluginFramework::MenuEntryActionReplay *a2);
CTRPluginFramework::MenuEntryActionReplay *__fastcall CTRPluginFramework::MenuEntryActionReplay::~MenuEntryActionReplay(CTRPluginFramework::MenuEntryActionReplay *this, CTRPluginFramework::MenuEntryActionReplay *a2);
CTRPluginFramework::ARCodeContext *__fastcall CTRPluginFramework::MenuEntryActionReplay::MenuEntryActionReplay(CTRPluginFramework::ARCodeContext *a1);
CTRPluginFramework::MenuEntryActionReplay *__fastcall CTRPluginFramework::MenuEntryActionReplay::Update(CTRPluginFramework::MenuEntryActionReplay *this);
// _DWORD CTRPluginFramework::MenuEntryImpl::IsActivated(CTRPluginFramework::MenuEntryImpl *__hidden this); idb
// _DWORD __cdecl CTRPluginFramework::ARHandler::Execute(CTRPluginFramework::ARHandler *__hidden this, CTRPluginFramework::ARCodeContext *); weak
// _DWORD __cdecl CTRPluginFramework::PluginMenuExecuteLoop::RemoveAR(CTRPluginFramework::PluginMenuExecuteLoop *__hidden this, CTRPluginFramework::MenuEntryActionReplay *); weak
// int __fastcall std::__cxx11::basic_string<char,std::char_traits<char>,std::allocator<char>>::_M_dispose(_DWORD); weak
// void __cdecl operator delete(void *); idb
// _DWORD __cdecl CTRPluginFramework::MenuEntryImpl::~MenuEntryImpl(CTRPluginFramework::MenuEntryImpl *__hidden this); idb
// int CTRPluginFramework::MenuEntryImpl::MenuEntryImpl(void); weak
// _DWORD CTRPluginFramework::ARCodeContext::ARCodeContext(CTRPluginFramework::ARCodeContext *__hidden this); idb
// _DWORD CTRPluginFramework::ARCodeContext::Clear(CTRPluginFramework::ARCodeContext *__hidden this); idb
// _DWORD CTRPluginFramework::ARCodeContext::Update(CTRPluginFramework::ARCodeContext *__hidden this); idb
// int __fastcall std::__cxx11::basic_string<char,std::char_traits<char>,std::allocator<char>>::substr(_DWORD, _DWORD, _DWORD, _DWORD); weak
// int __fastcall std::__cxx11::basic_string<char,std::char_traits<char>,std::allocator<char>>::operator=(_DWORD, _DWORD); weak
// size_t strlen(const char *s);
// int __fastcall std::__cxx11::basic_string<char,std::char_traits<char>,std::allocator<char>>::_S_copy_chars(_DWORD, _DWORD, _DWORD); weak
// int __fastcall CTRPluginFramework::operator<<(_DWORD, _DWORD, _DWORD); weak

//-------------------------------------------------------------------------
// Data declarations

_DWORD (__fastcall *off_248[2])(CTRPluginFramework::MenuEntryActionReplay *__hidden this) =
{
  &CTRPluginFramework::MenuEntryActionReplay::~MenuEntryActionReplay,
  &CTRPluginFramework::MenuEntryActionReplay::~MenuEntryActionReplay
}; // weak
// extern _UNKNOWN CTRPluginFramework::Color::Red; weak


//----- (00000004) --------------------------------------------------------
int __fastcall CTRPluginFramework::ActionReplay_ExecuteCode(int result, CTRPluginFramework::MenuEntryImpl *a2)
{
  int v2; // r4
  CTRPluginFramework::ARCodeContext *v3; // r1

  v2 = result;
  if ( result )
  {
    result = CTRPluginFramework::MenuEntryImpl::IsActivated((CTRPluginFramework::MenuEntryImpl *)result);
    if ( result )
    {
      if ( *(_BYTE *)(v2 + 120) || (unsigned int)*(_QWORD *)(v2 + 132) == *(_QWORD *)(v2 + 132) >> 32 )
        result = (*(int (__fastcall **)(int))(*(_DWORD *)v2 + 16))(v2);
      else
        result = CTRPluginFramework::ARHandler::Execute((CTRPluginFramework::ARHandler *)(v2 + 120), v3);
    }
  }
  return result;
}
// 260: using guessed type _DWORD __cdecl CTRPluginFramework::ARHandler::Execute(CTRPluginFramework::ARHandler *__hidden this, CTRPluginFramework::ARCodeContext *);

//----- (00000054) --------------------------------------------------------
CTRPluginFramework::MenuEntryActionReplay *__fastcall CTRPluginFramework::MenuEntryActionReplay::~MenuEntryActionReplay(CTRPluginFramework::MenuEntryActionReplay *this, CTRPluginFramework::MenuEntryActionReplay *a2)
{
  CTRPluginFramework::MenuEntryActionReplay *v2; // r4
  int v3; // r5
  int v4; // r6
  void *v5; // r0
  void *v6; // r0

  v2 = this;
  *(_DWORD *)this = off_248;
  CTRPluginFramework::PluginMenuExecuteLoop::RemoveAR(this, a2);
  v3 = *((_DWORD *)v2 + 33);
  v4 = *((_DWORD *)v2 + 34);
  while ( v4 != v3 )
  {
    std::__cxx11::basic_string<char,std::char_traits<char>,std::allocator<char>>::_M_dispose(v3 + 24);
    v5 = *(void **)(v3 + 12);
    if ( v5 )
      operator delete(v5);
    v3 += 48;
  }
  v6 = (void *)*((_DWORD *)v2 + 33);
  if ( v6 )
    operator delete(v6);
  CTRPluginFramework::MenuEntryImpl::~MenuEntryImpl(v2);
  return v2;
}
// 248: using guessed type _DWORD (__fastcall *off_248[2])(CTRPluginFramework::MenuEntryActionReplay *__hidden this);
// 264: using guessed type _DWORD __cdecl CTRPluginFramework::PluginMenuExecuteLoop::RemoveAR(CTRPluginFramework::PluginMenuExecuteLoop *__hidden this, CTRPluginFramework::MenuEntryActionReplay *);
// 268: using guessed type int __fastcall std::__cxx11::basic_string<char,std::char_traits<char>,std::allocator<char>>::_M_dispose(_DWORD);

//----- (000000BC) --------------------------------------------------------
CTRPluginFramework::MenuEntryActionReplay *__fastcall CTRPluginFramework::MenuEntryActionReplay::~MenuEntryActionReplay(CTRPluginFramework::MenuEntryActionReplay *this, CTRPluginFramework::MenuEntryActionReplay *a2)
{
  CTRPluginFramework::MenuEntryActionReplay *v2; // r4

  v2 = this;
  CTRPluginFramework::MenuEntryActionReplay::~MenuEntryActionReplay(this, a2);
  operator delete((void *)v2);
  return v2;
}

//----- (000000D8) --------------------------------------------------------
CTRPluginFramework::ARCodeContext *__fastcall CTRPluginFramework::MenuEntryActionReplay::MenuEntryActionReplay(CTRPluginFramework::ARCodeContext *a1)
{
  CTRPluginFramework::ARCodeContext *v1; // r4
  CTRPluginFramework::ARCodeContext *v2; // r5
  CTRPluginFramework::ARCodeContext *result; // r0

  v1 = a1;
  v2 = a1;
  CTRPluginFramework::MenuEntryImpl::MenuEntryImpl();
  *(_DWORD *)v2 = off_248;
  v2 = (CTRPluginFramework::ARCodeContext *)((char *)v2 + 120);
  CTRPluginFramework::ARCodeContext::ARCodeContext(v2);
  *((_BYTE *)v1 + 57) = 3;
  CTRPluginFramework::ARCodeContext::Clear(v2);
  result = v1;
  *((_DWORD *)v1 + 17) = CTRPluginFramework::ActionReplay_ExecuteCode;
  return result;
}
// 248: using guessed type _DWORD (__fastcall *off_248[2])(CTRPluginFramework::MenuEntryActionReplay *__hidden this);
// 274: using guessed type int CTRPluginFramework::MenuEntryImpl::MenuEntryImpl(void);

//----- (00000124) --------------------------------------------------------
CTRPluginFramework::MenuEntryActionReplay *__fastcall CTRPluginFramework::MenuEntryActionReplay::Update(CTRPluginFramework::MenuEntryActionReplay *this)
{
  CTRPluginFramework::MenuEntryActionReplay *v1; // r4
  char v2; // r3
  unsigned int v3; // r3
  unsigned int v4; // r3
  size_t v5; // r7
  char *v7; // [sp+0h] [bp-48h]
  size_t v8; // [sp+4h] [bp-44h]
  char v9[16]; // [sp+8h] [bp-40h]
  char s; // [sp+18h] [bp-30h]
  char v11; // [sp+19h] [bp-2Fh]
  char v12; // [sp+1Ah] [bp-2Eh]
  char v13; // [sp+1Bh] [bp-2Dh]
  char v14; // [sp+1Ch] [bp-2Ch]

  v1 = this;
  CTRPluginFramework::ARCodeContext::Update((CTRPluginFramework::MenuEntryActionReplay *)((char *)this + 120));
  if ( *((_DWORD *)v1 + 2) && *((_BYTE *)v1 + 120) )
  {
    if ( **((_BYTE **)v1 + 1) == 27 )
    {
      std::__cxx11::basic_string<char,std::char_traits<char>,std::allocator<char>>::substr(&s, (char *)v1 + 4, 4, -1);
      std::__cxx11::basic_string<char,std::char_traits<char>,std::allocator<char>>::operator=((char *)v1 + 4, &s);
      std::__cxx11::basic_string<char,std::char_traits<char>,std::allocator<char>>::_M_dispose(&s);
    }
    s = 27;
    v2 = CTRPluginFramework::Color::Red;
    if ( CTRPluginFramework::Color::Red < 1u )
      v2 = 1;
    v11 = v2;
    v3 = *((unsigned __int8 *)&CTRPluginFramework::Color::Red + 1);
    if ( v3 < 1 )
      LOBYTE(v3) = 1;
    v12 = v3;
    v4 = *((unsigned __int8 *)&CTRPluginFramework::Color::Red + 2);
    if ( v4 < 1 )
      LOBYTE(v4) = 1;
    v14 = 0;
    v13 = v4;
    v7 = v9;
    v5 = strlen(&s);
    std::__cxx11::basic_string<char,std::char_traits<char>,std::allocator<char>>::_S_copy_chars(v9, &s, &s + v5);
    v8 = v5;
    v9[v5] = 0;
    CTRPluginFramework::operator<<(&s, &v7, (char *)v1 + 4);
    std::__cxx11::basic_string<char,std::char_traits<char>,std::allocator<char>>::operator=((char *)v1 + 4, &s);
    std::__cxx11::basic_string<char,std::char_traits<char>,std::allocator<char>>::_M_dispose(&s);
    std::__cxx11::basic_string<char,std::char_traits<char>,std::allocator<char>>::_M_dispose(&v7);
  }
  return v1;
}
// 268: using guessed type int __fastcall std::__cxx11::basic_string<char,std::char_traits<char>,std::allocator<char>>::_M_dispose(_DWORD);
// 284: using guessed type int __fastcall std::__cxx11::basic_string<char,std::char_traits<char>,std::allocator<char>>::substr(_DWORD, _DWORD, _DWORD, _DWORD);
// 288: using guessed type int __fastcall std::__cxx11::basic_string<char,std::char_traits<char>,std::allocator<char>>::operator=(_DWORD, _DWORD);
// 290: using guessed type int __fastcall std::__cxx11::basic_string<char,std::char_traits<char>,std::allocator<char>>::_S_copy_chars(_DWORD, _DWORD, _DWORD);
// 294: using guessed type int __fastcall CTRPluginFramework::operator<<(_DWORD, _DWORD, _DWORD);
// 124: using guessed type char var_40[16];

// ALL OK, 5 function(s) have been successfully decompiled
