/* This file has been generated by the Hex-Rays decompiler.
   Copyright (c) 2007-2017 Hex-Rays <info@hex-rays.com>

   Detected compiler: GNU C++
*/

#include <defs.h>


//-------------------------------------------------------------------------
// Function declarations

int __fastcall CTRPluginFramework::MenuItem::NoteChanged(int result);
int __fastcall CTRPluginFramework::MenuItem::HasNoteChanged(CTRPluginFramework::MenuItem *this);
int __fastcall CTRPluginFramework::MenuItem::HandledNoteChanges(int result);
int __fastcall CTRPluginFramework::MenuItem::_DisableFolder(int result, CTRPluginFramework::MenuItem *a2);
int __fastcall CTRPluginFramework::MenuItem::Hide(int result, CTRPluginFramework::MenuItem *a2);
int __fastcall CTRPluginFramework::MenuItem::_EnableFolder(int result);
void __fastcall std::vector<CTRPluginFramework::MenuItem *,std::allocator<CTRPluginFramework::MenuItem *>>::_M_realloc_insert<CTRPluginFramework::MenuItem *>(_DWORD *a1, _BYTE *a2, _DWORD *a3);
void __fastcall CTRPluginFramework::MenuItem::Show(CTRPluginFramework::MenuItem *this, int a2, int a3);
// _DWORD __cdecl CTRPluginFramework::PluginMenuImpl::UnStar(CTRPluginFramework::PluginMenuImpl *__hidden this, CTRPluginFramework::MenuItem *); idb
// _DWORD CTRPluginFramework::PluginMenuImpl::Refresh(CTRPluginFramework::PluginMenuImpl *__hidden this); idb
// void *memmove(void *dest, const void *src, size_t n);
// void *memcpy(void *dest, const void *src, size_t n);
// void __cdecl operator delete(void *); idb
// _DWORD __cdecl operator new(unsigned int); idb


//----- (00000008) --------------------------------------------------------
int __fastcall CTRPluginFramework::MenuItem::NoteChanged(int result)
{
  *(_BYTE *)(result + 56) |= 0x40u;
  return result;
}

//----- (00000018) --------------------------------------------------------
int __fastcall CTRPluginFramework::MenuItem::HasNoteChanged(CTRPluginFramework::MenuItem *this)
{
  return (*((_BYTE *)this + 56) >> 6) & 1;
}

//----- (00000028) --------------------------------------------------------
int __fastcall CTRPluginFramework::MenuItem::HandledNoteChanges(int result)
{
  *(_BYTE *)(result + 56) &= 0xBFu;
  return result;
}

//----- (00000038) --------------------------------------------------------
int __fastcall CTRPluginFramework::MenuItem::_DisableFolder(int result, CTRPluginFramework::MenuItem *a2)
{
  int v2; // r5
  CTRPluginFramework::PluginMenuImpl **v3; // r6
  CTRPluginFramework::PluginMenuImpl *v4; // r4
  CTRPluginFramework::PluginMenuImpl *v5; // t1

  v2 = result;
  if ( result )
  {
    v3 = *(CTRPluginFramework::PluginMenuImpl ***)(result + 80);
    while ( *(CTRPluginFramework::PluginMenuImpl ***)(v2 + 84) != v3 )
    {
      v5 = *v3;
      ++v3;
      v4 = v5;
      if ( !v5 )
        break;
      if ( *((_BYTE *)v4 + 56) & 0x20 )
        CTRPluginFramework::PluginMenuImpl::UnStar(v4, a2);
      if ( *((_BYTE *)v4 + 57) )
      {
        result = (*(int (__fastcall **)(CTRPluginFramework::PluginMenuImpl *))(*(_DWORD *)v4 + 16))(v4);
      }
      else
      {
        *((_BYTE *)v4 + 56) &= 0xEFu;
        result = CTRPluginFramework::MenuItem::_DisableFolder(v4);
      }
    }
  }
  return result;
}

//----- (000000AC) --------------------------------------------------------
int __fastcall CTRPluginFramework::MenuItem::Hide(int result, CTRPluginFramework::MenuItem *a2)
{
  char v2; // r3
  int v3; // r4
  char *v4; // r1
  char *v5; // r2
  int i; // r12
  char *v7; // r3
  char *v8; // r1
  int v9; // r12
  int v10; // t1
  CTRPluginFramework::PluginMenuImpl *v11; // r0
  int v12; // r1

  if ( !(*(_BYTE *)(result + 56) & 0x10) )
    return result;
  v2 = *(_BYTE *)(result + 56) & 0xEF;
  v3 = result;
  *(_BYTE *)(result + 56) = v2;
  if ( v2 & 0x20 )
    CTRPluginFramework::PluginMenuImpl::UnStar((CTRPluginFramework::PluginMenuImpl *)result, a2);
  if ( *(_BYTE *)(v3 + 57) == 1 )
  {
    (*(void (__fastcall **)(int))(*(_DWORD *)v3 + 16))(v3);
  }
  else if ( !*(_BYTE *)(v3 + 57) )
  {
    v11 = (CTRPluginFramework::PluginMenuImpl *)CTRPluginFramework::MenuItem::_DisableFolder(v3, a2);
    CTRPluginFramework::PluginMenuImpl::Refresh(v11);
  }
  result = *(_DWORD *)(v3 + 60);
  if ( !result )
    return result;
  v4 = *(char **)(result + 80);
  v5 = *(char **)(result + 84);
  for ( i = (v5 - v4) >> 4; ; --i )
  {
    v7 = v4;
    if ( i <= 0 )
      break;
    if ( v3 == *(_DWORD *)v4 )
      goto LABEL_12;
    if ( v3 == *((_DWORD *)v4 + 1) )
    {
      v7 = v4 + 4;
      goto LABEL_12;
    }
    if ( v3 == *((_DWORD *)v4 + 2) )
    {
      v7 = v4 + 8;
      goto LABEL_12;
    }
    v4 += 16;
    if ( v3 == *((_DWORD *)v7 + 3) )
    {
      v7 += 12;
      goto LABEL_12;
    }
  }
  v12 = (v5 - v4) >> 2;
  if ( v12 == 2 )
  {
LABEL_35:
    if ( v3 == *(_DWORD *)v7 )
      goto LABEL_12;
    v7 += 4;
    goto LABEL_29;
  }
  if ( v12 == 3 )
  {
    if ( v3 == *(_DWORD *)v7 )
      goto LABEL_12;
    v7 += 4;
    goto LABEL_35;
  }
  if ( v12 != 1 )
  {
    v7 = *(char **)(result + 84);
    goto LABEL_12;
  }
LABEL_29:
  if ( v3 != *(_DWORD *)v7 )
    goto LABEL_30;
LABEL_12:
  if ( v7 != v5 )
  {
    v8 = v7 + 4;
    while ( v8 != v5 )
    {
      v10 = *(_DWORD *)v8;
      v8 += 4;
      v9 = v10;
      if ( v3 != v10 )
      {
        *(_DWORD *)v7 = v9;
        v7 += 4;
      }
    }
    v5 = v7;
  }
LABEL_30:
  if ( v5 != *(char **)(result + 84) )
    *(_DWORD *)(result + 84) = v5;
  return result;
}

//----- (00000208) --------------------------------------------------------
int __fastcall CTRPluginFramework::MenuItem::_EnableFolder(int result)
{
  int v1; // r4
  int *v2; // r5
  int v3; // t1

  v1 = result;
  if ( result )
  {
    v2 = *(int **)(result + 80);
    while ( *(int **)(v1 + 84) != v2 )
    {
      v3 = *v2;
      ++v2;
      result = v3;
      if ( !*(_BYTE *)(v3 + 57) )
      {
        *(_BYTE *)(result + 56) |= 0x10u;
        result = CTRPluginFramework::MenuItem::_EnableFolder();
      }
    }
  }
  return result;
}

//----- (00000248) --------------------------------------------------------
void __fastcall std::vector<CTRPluginFramework::MenuItem *,std::allocator<CTRPluginFramework::MenuItem *>>::_M_realloc_insert<CTRPluginFramework::MenuItem *>(_DWORD *a1, _BYTE *a2, _DWORD *a3)
{
  _BYTE *v3; // r7
  _BYTE *v4; // r10
  int v5; // r4
  int v6; // r3
  unsigned __int8 v7; // cf
  unsigned int v8; // r4
  _DWORD *v9; // r8
  _BYTE *v10; // r9
  _DWORD *v11; // r11
  size_t v12; // r5
  char *v13; // r6
  char *v14; // r5
  int v15; // r5

  v3 = (_BYTE *)*a1;
  v4 = (_BYTE *)a1[1];
  v5 = (signed int)&v4[-*a1] >> 2;
  if ( v5 )
    v6 = (signed int)&v4[-*a1] >> 2;
  else
    v6 = 1;
  v7 = __CFADD__(v5, v6);
  v8 = v5 + v6;
  v9 = a1;
  v10 = a2;
  v11 = a3;
  v12 = a2 - v3;
  if ( v7 || v8 > 0x3FFFFFFF )
  {
    v8 = 0x3FFFFFFF;
  }
  else if ( !v8 )
  {
    v13 = 0;
    goto LABEL_8;
  }
  v13 = (char *)operator new(4 * v8);
LABEL_8:
  *(_DWORD *)&v13[v12] = *v11;
  if ( v10 != v3 )
    memmove(v13, v3, v12);
  v14 = &v13[v12 + 4];
  if ( v10 != v4 )
    memcpy(v14, v10, v4 - v10);
  v15 = (int)&v14[v4 - v10];
  if ( v3 )
    operator delete(v3);
  *v9 = v13;
  v9[1] = v15;
  v9[2] = &v13[4 * v8];
}

//----- (0000030C) --------------------------------------------------------
void __fastcall CTRPluginFramework::MenuItem::Show(CTRPluginFramework::MenuItem *this, int a2, int a3)
{
  char v3; // r3
  CTRPluginFramework::MenuItem *v4; // r2
  _DWORD *v5; // r3
  int v6; // r4
  CTRPluginFramework::MenuItem **v7; // r12
  unsigned int v8; // r5
  CTRPluginFramework::MenuItem **v9; // lr
  CTRPluginFramework::MenuItem **v10; // r1
  int v11; // r0
  CTRPluginFramework::MenuItem *v12; // [sp+4h] [bp-14h]
  int v13; // [sp+8h] [bp-10h]

  v3 = *((_BYTE *)this + 56);
  if ( *((_BYTE *)this + 56) & 0x10 )
    return;
  v12 = (CTRPluginFramework::MenuItem *)a2;
  v13 = a3;
  *((_BYTE *)this + 56) = v3 | 0x10;
  v4 = this;
  if ( !*((_BYTE *)this + 57) )
    CTRPluginFramework::MenuItem::_EnableFolder((int)this);
  v5 = (_DWORD *)*((_DWORD *)v4 + 15);
  if ( !v5 )
    return;
  v6 = v5[20];
  v7 = (CTRPluginFramework::MenuItem **)v5[21];
  v8 = *((_DWORD *)v4 + 16);
  v9 = (CTRPluginFramework::MenuItem **)v5[22];
  if ( v8 >= ((signed int)v7 - v6) >> 2 )
  {
    v12 = v4;
    if ( v7 != v9 )
      goto LABEL_8;
    v10 = v7;
    goto LABEL_13;
  }
  v10 = (CTRPluginFramework::MenuItem **)(v6 + 4 * v8);
  v12 = v4;
  if ( v7 == v9 )
  {
LABEL_13:
    std::vector<CTRPluginFramework::MenuItem *,std::allocator<CTRPluginFramework::MenuItem *>>::_M_realloc_insert<CTRPluginFramework::MenuItem *>(
      v5 + 20,
      v10,
      &v12);
    return;
  }
  if ( v7 == v10 )
  {
LABEL_8:
    *v7 = v4;
    v5[21] += 4;
    return;
  }
  *v7 = *(v7 - 1);
  v11 = v5[21];
  v5[21] = v11 + 4;
  if ( v10 != (CTRPluginFramework::MenuItem **)(v11 - 4) )
    memmove(v10 + 1, v10, v11 - 4 - (_DWORD)v10);
  *(_DWORD *)(v6 + 4 * v8) = v12;
}

// ALL OK, 8 function(s) have been successfully decompiled
