/* This file has been generated by the Hex-Rays decompiler.
   Copyright (c) 2007-2017 Hex-Rays <info@hex-rays.com>

   Detected compiler: GNU C++
*/

#include <defs.h>

#include <stdarg.h>


//-------------------------------------------------------------------------
// Function declarations

void *__fastcall CTRPluginFramework::Renderer::GetContext(CTRPluginFramework::Renderer *this);
int __fastcall CTRPluginFramework::Renderer::DrawPixel(CTRPluginFramework::Renderer *a1, int a2, int a3);
int __fastcall CTRPluginFramework::Renderer::DrawCharacter(CTRPluginFramework::Renderer *a1, int a2, int a3, int a4);
int __fastcall CTRPluginFramework::Renderer::DrawCharacter(CTRPluginFramework::Renderer *a1, int a2, int a3, int a4, int a5);
int __fastcall CTRPluginFramework::Renderer::DrawString(unsigned __int8 *a1, int a2, int a3, int a4);
int CTRPluginFramework::Renderer::DrawString(CTRPluginFramework::Renderer *a1, int a2, int *a3, int a4, ...);
int __fastcall CTRPluginFramework::Renderer::LinuxFontSize(CTRPluginFramework::Renderer *this, const char *a2);
// int __fastcall threadGetCurrent(_DWORD); weak
// int ZTHN18CTRPluginFramework9PrivColor13ToFramebufferE(void); weak
// _DWORD __cdecl CTRPluginFramework::ScreenImpl::GetLeftFramebuffer(CTRPluginFramework::ScreenImpl *__hidden this, int, int); idb
// _DWORD CTRPluginFramework::ScreenImpl::GetStride(CTRPluginFramework::ScreenImpl *__hidden this); idb
// _DWORD CTRPluginFramework::ScreenImpl::GetBytesPerPixel(CTRPluginFramework::ScreenImpl *__hidden this); idb
// _DWORD CTRPluginFramework::ScreenImpl::Is3DEnabled(CTRPluginFramework::ScreenImpl *__hidden this); idb
// _DWORD __cdecl CTRPluginFramework::ScreenImpl::GetRightFramebuffer(CTRPluginFramework::ScreenImpl *__hidden this, int, int); idb

//-------------------------------------------------------------------------
// Data declarations

_UNKNOWN font; // weak
// extern __thread _UNKNOWN CTRPluginFramework::PrivColor::ToFramebuffer; weak
// extern _UNKNOWN CTRPluginFramework::Renderer::hookContext; weak


//----- (00000004) --------------------------------------------------------
void *__fastcall CTRPluginFramework::Renderer::GetContext(CTRPluginFramework::Renderer *this)
{
  int v1; // r0
  void *result; // r0

  v1 = threadGetCurrent(this);
  if ( v1 )
    result = (void *)(v1 + 1148);
  else
    result = &CTRPluginFramework::Renderer::hookContext;
  return result;
}
// 1014: using guessed type int __fastcall threadGetCurrent(_DWORD);

//----- (00000024) --------------------------------------------------------
int __fastcall CTRPluginFramework::Renderer::DrawPixel(CTRPluginFramework::Renderer *a1, int a2, int a3)
{
  int v3; // r7
  int v4; // r8
  int v5; // r5
  CTRPluginFramework::ScreenImpl *v6; // r6
  int (__fastcall *v7)(int, int); // r4
  int v8; // r0

  v3 = (int)a1;
  v4 = a2;
  v5 = a3;
  v6 = (CTRPluginFramework::ScreenImpl *)*((_DWORD *)CTRPluginFramework::Renderer::GetContext(a1) + 1);
  if ( &ZTHN18CTRPluginFramework9PrivColor13ToFramebufferE )
    ZTHN18CTRPluginFramework9PrivColor13ToFramebufferE();
  v7 = *(int (__fastcall **)(int, int))((char *)&CTRPluginFramework::PrivColor::ToFramebuffer + __mrc(15, 0, 13, 0, 3));
  v8 = CTRPluginFramework::ScreenImpl::GetLeftFramebuffer(v6, v3, v4);
  return v7(v8, v5);
}
// 101C: using guessed type int ZTHN18CTRPluginFramework9PrivColor13ToFramebufferE(void);

//----- (00000084) --------------------------------------------------------
int __fastcall CTRPluginFramework::Renderer::DrawCharacter(CTRPluginFramework::Renderer *a1, int a2, int a3, int a4)
{
  int v4; // r11
  int v5; // r8
  CTRPluginFramework::Renderer *v6; // r4
  CTRPluginFramework::ScreenImpl *v7; // r5
  int v8; // r7
  unsigned __int8 *v9; // r4
  unsigned __int8 *v10; // r6
  int v11; // r2
  int v12; // t1
  signed int v13; // r9
  int v14; // r10
  int result; // r0
  int v16; // r10
  int v17; // r2
  int v18; // r11
  int v19; // t1
  signed int v20; // r6
  int v21; // r9
  int v22; // [sp+4h] [bp-3Ch]
  int v23; // [sp+8h] [bp-38h]
  int v24; // [sp+Ch] [bp-34h]
  int v25; // [sp+10h] [bp-30h]
  int v26; // [sp+14h] [bp-2Ch]

  v4 = a3;
  v23 = a4;
  v5 = a2;
  v6 = a1;
  v7 = (CTRPluginFramework::ScreenImpl *)*((_DWORD *)CTRPluginFramework::Renderer::GetContext(a1) + 1);
  v8 = CTRPluginFramework::ScreenImpl::GetStride(v7);
  CTRPluginFramework::ScreenImpl::GetBytesPerPixel(v7);
  v9 = (unsigned __int8 *)&font + 10 * (_DWORD)v6;
  v22 = (int)(v9 + 10);
  v10 = v9;
  v26 = __mrc(15, 0, 13, 0, 3);
  do
  {
    v25 = v4 - (_DWORD)v9;
    v11 = (int)&v10[v4 - (_DWORD)v9];
    v12 = *v10++;
    v24 = v12;
    v13 = 6;
    v14 = CTRPluginFramework::ScreenImpl::GetLeftFramebuffer(v7, v5, v11);
    do
    {
      if ( (v24 >> v13) & 1 )
      {
        if ( &ZTHN18CTRPluginFramework9PrivColor13ToFramebufferE )
          ZTHN18CTRPluginFramework9PrivColor13ToFramebufferE();
        (*(void (__fastcall **)(int, int))((char *)&CTRPluginFramework::PrivColor::ToFramebuffer + v26))(v14, v23);
      }
      --v13;
      v14 += v8;
    }
    while ( v13 );
  }
  while ( v10 != (unsigned __int8 *)v22 );
  result = CTRPluginFramework::ScreenImpl::Is3DEnabled(v7);
  if ( result )
  {
    v16 = __mrc(15, 0, 13, 0, 3);
    do
    {
      v17 = (int)&v9[v25];
      v19 = *v9++;
      v18 = v19;
      result = CTRPluginFramework::ScreenImpl::GetRightFramebuffer(v7, v5 - 10, v17);
      v20 = 6;
      v21 = result;
      do
      {
        if ( (v18 >> v20) & 1 )
        {
          if ( &ZTHN18CTRPluginFramework9PrivColor13ToFramebufferE )
            ZTHN18CTRPluginFramework9PrivColor13ToFramebufferE();
          result = (*(int (__fastcall **)(int, int))((char *)&CTRPluginFramework::PrivColor::ToFramebuffer + v16))(
                     v21,
                     v23);
        }
        --v20;
        v21 += v8;
      }
      while ( v20 );
    }
    while ( v9 != (unsigned __int8 *)v22 );
  }
  return result;
}
// 101C: using guessed type int ZTHN18CTRPluginFramework9PrivColor13ToFramebufferE(void);

//----- (000001EC) --------------------------------------------------------
int __fastcall CTRPluginFramework::Renderer::DrawCharacter(CTRPluginFramework::Renderer *a1, int a2, int a3, int a4, int a5)
{
  int v5; // r6
  CTRPluginFramework::Renderer *v6; // r4
  CTRPluginFramework::ScreenImpl *v7; // r5
  int v8; // r10
  int v9; // r9
  unsigned __int8 *v10; // r4
  unsigned __int8 *v11; // r7
  int v12; // r2
  int v13; // t1
  signed int v14; // r8
  int v15; // r11
  int v16; // r1
  int result; // r0
  int v18; // r6
  int v19; // r2
  int v20; // r11
  int v21; // t1
  signed int v22; // r7
  int v23; // r8
  int v24; // r1
  int v25; // [sp+4h] [bp-3Ch]
  int v26; // [sp+8h] [bp-38h]
  int v27; // [sp+Ch] [bp-34h]
  int v28; // [sp+10h] [bp-30h]
  int v29; // [sp+14h] [bp-2Ch]

  v29 = a3;
  v27 = a4;
  v5 = a2;
  v6 = a1;
  v7 = (CTRPluginFramework::ScreenImpl *)*((_DWORD *)CTRPluginFramework::Renderer::GetContext(a1) + 1);
  v8 = __mrc(15, 0, 13, 0, 3);
  v9 = CTRPluginFramework::ScreenImpl::GetStride(v7);
  CTRPluginFramework::ScreenImpl::GetBytesPerPixel(v7);
  v10 = (unsigned __int8 *)&font + 10 * (_DWORD)v6;
  v11 = v10;
  v25 = (int)(v10 + 10);
  do
  {
    v26 = v29 - (_DWORD)v10;
    v12 = (int)&v11[v29 - (_DWORD)v10];
    v13 = *v11++;
    v28 = v13;
    v14 = 6;
    v15 = CTRPluginFramework::ScreenImpl::GetLeftFramebuffer(v7, v5, v12);
    do
    {
      if ( &ZTHN18CTRPluginFramework9PrivColor13ToFramebufferE )
        ZTHN18CTRPluginFramework9PrivColor13ToFramebufferE();
      v16 = a5;
      if ( (v28 >> v14) & 1 )
        v16 = v27;
      (*(void (__fastcall **)(int, int))((char *)&CTRPluginFramework::PrivColor::ToFramebuffer + v8))(v15, v16);
      --v14;
      v15 += v9;
    }
    while ( v14 );
  }
  while ( v11 != (unsigned __int8 *)v25 );
  result = CTRPluginFramework::ScreenImpl::Is3DEnabled(v7);
  if ( result )
  {
    v18 = v5 - 10;
    do
    {
      v19 = (int)&v10[v26];
      v21 = *v10++;
      v20 = v21;
      v22 = 6;
      v23 = CTRPluginFramework::ScreenImpl::GetRightFramebuffer(v7, v18, v19);
      do
      {
        if ( &ZTHN18CTRPluginFramework9PrivColor13ToFramebufferE )
          ZTHN18CTRPluginFramework9PrivColor13ToFramebufferE();
        v24 = a5;
        if ( (v20 >> v22) & 1 )
          v24 = v27;
        result = (*(int (__fastcall **)(int, int))((char *)&CTRPluginFramework::PrivColor::ToFramebuffer + v8))(
                   v23,
                   v24);
        --v22;
        v23 += v9;
      }
      while ( v22 );
    }
    while ( v10 != (unsigned __int8 *)v25 );
  }
  return result;
}
// 101C: using guessed type int ZTHN18CTRPluginFramework9PrivColor13ToFramebufferE(void);

//----- (00000358) --------------------------------------------------------
int __fastcall CTRPluginFramework::Renderer::DrawString(unsigned __int8 *a1, int a2, int a3, int a4)
{
  unsigned __int8 *v4; // r12
  int v5; // r5
  int *v6; // r4
  int v7; // r7
  signed int v8; // r0
  int v9; // r6
  int result; // r0
  int v11; // [sp+4h] [bp-1Ch]
  int v12; // [sp+8h] [bp-18h]

  v12 = a3;
  v4 = a1;
  v5 = a2;
  v6 = (int *)a3;
  v7 = a4;
  v11 = a4;
  while ( 1 )
  {
    v8 = *v4;
    if ( !*v4 )
      break;
    v9 = (int)(v4 + 1);
    if ( v8 == 24 )
    {
      v11 = v7;
    }
    else if ( v8 == 27 )
    {
      v9 = (int)(v4 + 4);
      LOWORD(v11) = *(_WORD *)(v4 + 1);
      BYTE2(v11) = v4[3];
    }
    else
    {
      if ( v8 == 255 )
      {
        v8 = 24;
      }
      else if ( v8 == 254 )
      {
        v8 = 27;
      }
      CTRPluginFramework::Renderer::DrawCharacter((CTRPluginFramework::Renderer *)v8, v5, *v6, (int)&v11);
      v5 += 6;
    }
    v4 = (unsigned __int8 *)v9;
  }
  result = *v6 + 10;
  *v6 = result;
  return result;
}

//----- (000003F8) --------------------------------------------------------
int CTRPluginFramework::Renderer::DrawString(CTRPluginFramework::Renderer *a1, int a2, int *a3, int a4, ...)
{
  int v4; // r4
  int *v5; // r6
  CTRPluginFramework::Renderer *v6; // r5
  CTRPluginFramework::ScreenImpl *v7; // r11
  signed int v8; // r8
  int v9; // r9
  int v10; // r3
  int v11; // r8
  signed int v12; // r9
  int v13; // r10
  int v14; // r4
  signed int v15; // r0
  int v16; // r7
  int result; // r0
  int v18; // [sp+8h] [bp-40h]
  signed int v19; // [sp+Ch] [bp-3Ch]
  int v20; // [sp+10h] [bp-38h]
  int v21; // [sp+10h] [bp-38h]
  int v22; // [sp+14h] [bp-34h]
  int v23; // [sp+18h] [bp-30h]
  int v24; // [sp+1Ch] [bp-2Ch]
  va_list va; // [sp+48h] [bp+0h]

  va_start(va, a4);
  v24 = a4;
  v4 = a2;
  v5 = a3;
  v6 = a1;
  v7 = (CTRPluginFramework::ScreenImpl *)*((_DWORD *)CTRPluginFramework::Renderer::GetContext(a1) + 1);
  v8 = 0;
  v22 = v24;
  v20 = CTRPluginFramework::ScreenImpl::GetBytesPerPixel(v7);
  v23 = __mrc(15, 0, 13, 0, 3);
  while ( 1 )
  {
    v9 = CTRPluginFramework::ScreenImpl::GetLeftFramebuffer(v7, v8 + v4, *v5);
    v19 = 10;
    do
    {
      if ( &ZTHN18CTRPluginFramework9PrivColor13ToFramebufferE )
        ZTHN18CTRPluginFramework9PrivColor13ToFramebufferE();
      (*(void (__fastcall **)(int, char *))((char *)&CTRPluginFramework::PrivColor::ToFramebuffer + v23))(
        v9,
        (char *)va);
      v18 = -v20;
      v9 -= v20;
      --v19;
    }
    while ( v19 );
    if ( v8 == 1 )
      break;
    v8 = 1;
  }
  if ( CTRPluginFramework::ScreenImpl::Is3DEnabled(v7) )
  {
    v11 = v4 - 10;
    v21 = __mrc(15, 0, 13, 0, 3);
    do
    {
      v12 = 10;
      v13 = CTRPluginFramework::ScreenImpl::GetRightFramebuffer(v7, v11, *v5);
      do
      {
        if ( &ZTHN18CTRPluginFramework9PrivColor13ToFramebufferE )
          ZTHN18CTRPluginFramework9PrivColor13ToFramebufferE();
        (*(void (__fastcall **)(int, char *))((char *)&CTRPluginFramework::PrivColor::ToFramebuffer + v21))(
          v13,
          (char *)va);
        --v12;
        v13 += v18;
      }
      while ( v12 );
      v10 = v4 - 8;
      ++v11;
    }
    while ( v11 != v4 - 8 );
  }
  v14 = v4 + 2;
  while ( 1 )
  {
    v15 = *(unsigned __int8 *)v6;
    if ( !*(_BYTE *)v6 )
      break;
    if ( v15 == 24 )
      v10 = v22;
    v16 = (int)v6 + 1;
    if ( v15 == 24 )
    {
      v24 = v10;
    }
    else if ( v15 == 27 )
    {
      v16 = (int)v6 + 4;
      LOWORD(v24) = *(_WORD *)((char *)v6 + 1);
      v10 = *((unsigned __int8 *)v6 + 3);
      BYTE2(v24) = *((_BYTE *)v6 + 3);
    }
    else
    {
      if ( v15 == 255 )
      {
        v15 = 24;
      }
      else if ( v15 == 254 )
      {
        v15 = 27;
      }
      CTRPluginFramework::Renderer::DrawCharacter((CTRPluginFramework::Renderer *)v15, v14, *v5, (int)&v24, (int)va);
      v14 += 6;
    }
    v6 = (CTRPluginFramework::Renderer *)v16;
  }
  result = *v5 + 10;
  *v5 = result;
  return result;
}
// 101C: using guessed type int ZTHN18CTRPluginFramework9PrivColor13ToFramebufferE(void);

//----- (000005E0) --------------------------------------------------------
int __fastcall CTRPluginFramework::Renderer::LinuxFontSize(CTRPluginFramework::Renderer *this, const char *a2)
{
  CTRPluginFramework::Renderer *v2; // r3
  int result; // r0
  int v4; // r2

  v2 = this;
  result = 0;
  while ( 1 )
  {
    v4 = *(unsigned __int8 *)v2;
    if ( !*(_BYTE *)v2 )
      break;
    if ( v4 == 27 )
    {
      v2 = (CTRPluginFramework::Renderer *)((char *)v2 + 3);
    }
    else if ( v4 != 24 )
    {
      result += 6;
    }
    v2 = (CTRPluginFramework::Renderer *)((char *)v2 + 1);
  }
  return result;
}

// ALL OK, 7 function(s) have been successfully decompiled
