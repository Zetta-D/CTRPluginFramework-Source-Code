/* This file has been generated by the Hex-Rays decompiler.
   Copyright (c) 2007-2017 Hex-Rays <info@hex-rays.com>

   Detected compiler: GNU C++
*/

#include <defs.h>


//-------------------------------------------------------------------------
// Function declarations

int __fastcall CTRPluginFramework::TouchKeyString::TouchKeyString(int a1, int a2, int a3, const char *a4, signed int a5, int a6, char a7);
int __fastcall CTRPluginFramework::TouchKeyString::Enable(int result, bool a2);
int __fastcall CTRPluginFramework::TouchKeyString::Draw(int result, char *a2);
int __fastcall CTRPluginFramework::TouchKeyString::Update(int result, int a2, int *a3);
int __fastcall CTRPluginFramework::TouchKeyString::Scroll(int result, float a2);
signed int __fastcall CTRPluginFramework::TouchKeyString::operator()(int a1);
// int std::__cxx11::basic_string<char,std::char_traits<char>,std::allocator<char>>::_M_assign(void); weak
// _DWORD __cdecl CTRPluginFramework::Renderer::GetTextSize(CTRPluginFramework::Renderer *__hidden this, const char *); idb
// int __fastcall std::__cxx11::basic_string<char,std::char_traits<char>,std::allocator<char>>::pop_back(_DWORD); weak
// int __fastcall CTRPluginFramework::Renderer::DrawRect(_DWORD); weak
// int __fastcall CTRPluginFramework::Renderer::DrawSysString(_DWORD, _DWORD, _DWORD, _DWORD, _DWORD, _DWORD); weak

//-------------------------------------------------------------------------
// Data declarations

// extern _UNKNOWN CTRPluginFramework::Preferences::Settings; weak


//----- (00000004) --------------------------------------------------------
int __fastcall CTRPluginFramework::TouchKeyString::TouchKeyString(int a1, int a2, int a3, const char *a4, signed int a5, int a6, char a7)
{
  int v7; // s0
  int v8; // r4
  int v9; // ST10_4
  const char *v10; // ST14_4
  const char *v11; // r1
  _DWORD *v12; // r12
  signed int v13; // r3
  int result; // r0

  v8 = a1;
  v9 = a3;
  v10 = a4;
  *(_DWORD *)a1 = a1 + 8;
  *(_DWORD *)(a1 + 4) = 0;
  *(_BYTE *)(a1 + 8) = 0;
  *(_DWORD *)(a1 + 24) = 0;
  *(_DWORD *)(a1 + 28) = 0;
  *(_DWORD *)(a1 + 32) = 0;
  *(_DWORD *)(a1 + 36) = 0;
  std::__cxx11::basic_string<char,std::char_traits<char>,std::allocator<char>>::_M_assign();
  v11 = v10;
  v12 = (_DWORD *)(v8 + 24);
  *v12 = v9;
  v12[1] = v10;
  v12[2] = a5;
  v12[3] = a6;
  *(float *)(v8 + 52) = (float)*(signed int *)(v8 + 28);
  *(_WORD *)(v8 + 40) = 0;
  *(_BYTE *)(v8 + 42) = a7;
  while ( 1 )
  {
    CTRPluginFramework::Renderer::GetTextSize(*(CTRPluginFramework::Renderer **)v8, v11);
    *(_DWORD *)(v8 + 48) = v7;
    v13 = (signed int)*(float *)(v8 + 48);
    if ( v13 <= a5 || !*(_DWORD *)(v8 + 4) )
      break;
    std::__cxx11::basic_string<char,std::char_traits<char>,std::allocator<char>>::pop_back(v8);
  }
  result = v8;
  *(_WORD *)(v8 + 44) = *(_WORD *)(v8 + 24) + ((*(_DWORD *)(v8 + 32) - v13) >> 1);
  return result;
}
// 250: using guessed type int std::__cxx11::basic_string<char,std::char_traits<char>,std::allocator<char>>::_M_assign(void);
// 258: using guessed type int __fastcall std::__cxx11::basic_string<char,std::char_traits<char>,std::allocator<char>>::pop_back(_DWORD);

//----- (000000C4) --------------------------------------------------------
int __fastcall CTRPluginFramework::TouchKeyString::Enable(int result, bool a2)
{
  *(_BYTE *)(result + 42) = a2;
  return result;
}

//----- (000000CC) --------------------------------------------------------
int __fastcall CTRPluginFramework::TouchKeyString::Draw(int result, char *a2)
{
  int v2; // r5
  int v3; // r6
  _DWORD *v4; // r4
  _DWORD *v5; // r7
  int v6; // r5
  int v7; // [sp+Ch] [bp-1Ch]

  if ( *(_BYTE *)(result + 42) )
  {
    if ( *(_BYTE *)(result + 40) )
      a2 = (char *)&CTRPluginFramework::Preferences::Settings + 92;
    if ( !*(_BYTE *)(result + 40) )
      a2 = (char *)&CTRPluginFramework::Preferences::Settings + 88;
    v2 = *(_DWORD *)(result + 24);
    v7 = *(_DWORD *)(result + 28) + ((*(_DWORD *)(result + 36) - 16) >> 1);
    v3 = *(unsigned __int16 *)(result + 44);
    v4 = (_DWORD *)result;
    v5 = a2 + 8;
    v6 = v2 + *(_DWORD *)(result + 32);
    CTRPluginFramework::Renderer::DrawRect(result + 24);
    result = CTRPluginFramework::Renderer::DrawSysString(*v4, v3, &v7, v6 - 1, *v5, 0);
  }
  return result;
}
// 25C: using guessed type int __fastcall CTRPluginFramework::Renderer::DrawRect(_DWORD);
// 260: using guessed type int __fastcall CTRPluginFramework::Renderer::DrawSysString(_DWORD, _DWORD, _DWORD, _DWORD, _DWORD, _DWORD);

//----- (00000168) --------------------------------------------------------
int __fastcall CTRPluginFramework::TouchKeyString::Update(int result, int a2, int *a3)
{
  int v3; // r12
  int v4; // r6
  int v5; // r3
  _BOOL4 v6; // r4
  int v7; // r5
  int v8; // lr
  int v9; // r2
  int v10; // r3
  int v11; // r2
  bool v12; // zf
  char v13; // r1

  if ( *(_BYTE *)(result + 42) )
  {
    v3 = *(_DWORD *)(result + 24);
    v4 = *a3;
    if ( v3 < v3 + *(_DWORD *)(result + 32) )
    {
      v5 = *(_DWORD *)(result + 24);
      v3 += *(_DWORD *)(result + 32);
    }
    else
    {
      v5 = v3 + *(_DWORD *)(result + 32);
    }
    v6 = v4 >= v5;
    if ( v4 >= v3 )
      v6 = 0;
    v7 = a3[1];
    v8 = *(_DWORD *)(result + 36);
    v9 = *(_DWORD *)(result + 28);
    if ( v6 )
    {
      if ( v9 >= v9 + v8 )
        v10 = v9 + v8;
      else
        v10 = *(_DWORD *)(result + 28);
      if ( v9 < v9 + v8 )
        v9 += v8;
      LOBYTE(v6) = v7 >= v10;
      if ( v7 >= v9 )
        LOBYTE(v6) = 0;
    }
    v11 = *(unsigned __int8 *)(result + 40) ^ 1;
    v12 = (a2 | v11) == 0;
    if ( !(a2 | v11) )
      LOBYTE(v11) = 1;
    v13 = a2 & v6;
    if ( v12 )
      *(_BYTE *)(result + 41) = v11;
    *(_BYTE *)(result + 40) = v13;
  }
  return result;
}

//----- (00000208) --------------------------------------------------------
int __fastcall CTRPluginFramework::TouchKeyString::Scroll(int result, float a2)
{
  float v2; // s0
  float v3; // s0

  v3 = v2 + *(float *)(result + 52);
  *(float *)(result + 52) = v3;
  *(_DWORD *)(result + 28) = (signed int)v3;
  return result;
}

//----- (00000220) --------------------------------------------------------
signed int __fastcall CTRPluginFramework::TouchKeyString::operator()(int a1)
{
  if ( !*(_BYTE *)(a1 + 42) || !*(_BYTE *)(a1 + 41) )
    return -1;
  *(_BYTE *)(a1 + 41) = 0;
  return 1;
}

// ALL OK, 6 function(s) have been successfully decompiled
